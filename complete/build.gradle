buildscript {
    repositories {
        maven { url "https://jcenter.bintray.com" }
        maven { url 'https://repo.spring.io/milestone' }
        maven { url "https://plugins.gradle.org/m2/"}

        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE')
// tag::build[]
        classpath('com.google.cloud.tools.jib:com.google.cloud.tools.jib.gradle.plugin:1.8.0')
// end::build[]
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// tag::plugin[]
apply plugin: 'com.google.cloud.tools.jib'
// end::plugin[]

//group = 'springio'
group = 'hello'

bootJar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}


sourceCompatibility = 13
targetCompatibility = 13
//compileJava {
//options.compilerArgs += ['-parameters', '-g']
//}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}


dependencies {


    /**
     *
     * Devtools:
     * Cal afegir la dependencia, i hauria d'apareixer el missatge "LiveReload server is running on port" al reiniciar la app
     * https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-devtools-restart
     * PERO OJO, A L'INTELLIJ PER DEFECTE NO FUNCIONARÀ SI NO FEM MÉS COSES:
     * LLEGIR:
     *  https://dev.to/suin/spring-boot-developer-tools-how-to-enable-automatic-restart-in-intellij-idea-1c6i
     *  https://stackoverflow.com/questions/33869606/intellij-15-springboot-devtools-livereload-not-working     *
     *
     * Sol 1:
     *  - In your intellij IDEA go to: file->settings->Build,execution,deployment. Go to ->Compiler->build project automatically.
     *  - In your intellij IDEA: SHIFT+Ctrl+A -> Type "Registry" -> check de option "compiler.automake.allow.when.app.running"
     *  - Finally what must be noted is how to start the application. The application must be started by running "main" function instead of the Gradle task "bootRun"
     *
     * Sol 2:
     *  - run app debug mode and press Ctrl + f9 (short-cut for build)
     *
    */

    developmentOnly("org.springframework.boot:spring-boot-devtools")




    //compile 'org.awaitility:awaitility:3.1.2'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'


    testImplementation 'org.awaitility:awaitility:3.1.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'


    //implementation 'org.springframework.data:spring-data-jpa:2.1.6.RELEASE'
    //implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.1.3.RELEASE'
    //implementation 'com.h2database:h2:1.4.197'

    //TODO: No em funciona en els test (si al executar però al esciure'ls)??
    //lombok per getters / setters / constructors
    compileOnly 'org.projectlombok:lombok'
    compile 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'



}


test {
    useJUnitPlatform()
}
